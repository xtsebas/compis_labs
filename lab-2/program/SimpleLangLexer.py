# Generated from SimpleLang.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,12,86,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,1,0,1,0,1,1,1,
        1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,4,6,39,8,6,11,6,12,6,40,1,
        7,4,7,44,8,7,11,7,12,7,45,1,7,1,7,5,7,50,8,7,10,7,12,7,53,9,7,1,
        8,1,8,5,8,57,8,8,10,8,12,8,60,9,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,3,9,73,8,9,1,10,3,10,76,8,10,1,10,1,10,1,11,4,11,81,
        8,11,11,11,12,11,82,1,11,1,11,1,58,0,12,1,1,3,2,5,3,7,4,9,5,11,6,
        13,7,15,8,17,9,19,10,21,11,23,12,1,0,2,1,0,48,57,2,0,9,9,32,32,92,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,1,25,1,0,0,0,3,27,1,0,0,0,5,29,1,0,0,0,7,31,
        1,0,0,0,9,33,1,0,0,0,11,35,1,0,0,0,13,38,1,0,0,0,15,43,1,0,0,0,17,
        54,1,0,0,0,19,72,1,0,0,0,21,75,1,0,0,0,23,80,1,0,0,0,25,26,5,42,
        0,0,26,2,1,0,0,0,27,28,5,47,0,0,28,4,1,0,0,0,29,30,5,43,0,0,30,6,
        1,0,0,0,31,32,5,45,0,0,32,8,1,0,0,0,33,34,5,40,0,0,34,10,1,0,0,0,
        35,36,5,41,0,0,36,12,1,0,0,0,37,39,7,0,0,0,38,37,1,0,0,0,39,40,1,
        0,0,0,40,38,1,0,0,0,40,41,1,0,0,0,41,14,1,0,0,0,42,44,7,0,0,0,43,
        42,1,0,0,0,44,45,1,0,0,0,45,43,1,0,0,0,45,46,1,0,0,0,46,47,1,0,0,
        0,47,51,5,46,0,0,48,50,7,0,0,0,49,48,1,0,0,0,50,53,1,0,0,0,51,49,
        1,0,0,0,51,52,1,0,0,0,52,16,1,0,0,0,53,51,1,0,0,0,54,58,5,34,0,0,
        55,57,9,0,0,0,56,55,1,0,0,0,57,60,1,0,0,0,58,59,1,0,0,0,58,56,1,
        0,0,0,59,61,1,0,0,0,60,58,1,0,0,0,61,62,5,34,0,0,62,18,1,0,0,0,63,
        64,5,116,0,0,64,65,5,114,0,0,65,66,5,117,0,0,66,73,5,101,0,0,67,
        68,5,102,0,0,68,69,5,97,0,0,69,70,5,108,0,0,70,71,5,115,0,0,71,73,
        5,101,0,0,72,63,1,0,0,0,72,67,1,0,0,0,73,20,1,0,0,0,74,76,5,13,0,
        0,75,74,1,0,0,0,75,76,1,0,0,0,76,77,1,0,0,0,77,78,5,10,0,0,78,22,
        1,0,0,0,79,81,7,1,0,0,80,79,1,0,0,0,81,82,1,0,0,0,82,80,1,0,0,0,
        82,83,1,0,0,0,83,84,1,0,0,0,84,85,6,11,0,0,85,24,1,0,0,0,8,0,40,
        45,51,58,72,75,82,1,6,0,0
    ]

class SimpleLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    INT = 7
    FLOAT = 8
    STRING = 9
    BOOL = 10
    NEWLINE = 11
    WS = 12

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'*'", "'/'", "'+'", "'-'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "INT", "FLOAT", "STRING", "BOOL", "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "INT", 
                  "FLOAT", "STRING", "BOOL", "NEWLINE", "WS" ]

    grammarFileName = "SimpleLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


